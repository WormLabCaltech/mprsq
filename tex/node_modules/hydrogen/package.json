{
  "_args": [
    [
      "hydrogen",
      "/Users/dangeles/my_repos/mprsq/tex"
    ]
  ],
  "_from": "hydrogen@latest",
  "_id": "hydrogen@0.2.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/hydrogen",
  "_npmUser": {
    "email": "pxandbytes@gmail.com",
    "name": "pixelsandbytes"
  },
  "_npmVersion": "1.2.30",
  "_phantomChildren": {},
  "_requested": {
    "name": "hydrogen",
    "raw": "hydrogen",
    "rawSpec": "",
    "scope": null,
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/hydrogen/-/hydrogen-0.2.0.tgz",
  "_shasum": "a9248d2dcdab018ed5d1a43d3916a22874baec17",
  "_shrinkwrap": null,
  "_spec": "hydrogen",
  "_where": "/Users/dangeles/my_repos/mprsq/tex",
  "author": {
    "email": "pxandbytes@gmail.com",
    "name": "Pixels & Bytes"
  },
  "bugs": {
    "url": "https://github.com/pixelsandbytes/hydrogen/issues"
  },
  "dependencies": {},
  "description": "A minimal library for object-oriented JavaScript development",
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-cli": "~0.1.9",
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-uglify": "~0.2.2",
    "grunt-simple-mocha": "~0.4.0",
    "should": "~1.2.2"
  },
  "directories": {},
  "dist": {
    "shasum": "a9248d2dcdab018ed5d1a43d3916a22874baec17",
    "tarball": "https://registry.npmjs.org/hydrogen/-/hydrogen-0.2.0.tgz"
  },
  "engines": {
    "node": ">=0.8"
  },
  "homepage": "https://github.com/pixelsandbytes/hydrogen#readme",
  "keywords": [
    "class",
    "hydrogen",
    "inheritance",
    "inherit",
    "javascript",
    "js",
    "object",
    "object-oriented",
    "oo",
    "override",
    "private"
  ],
  "license": "MIT",
  "main": "./lib/hydrogen.js",
  "maintainers": [
    {
      "email": "pxandbytes@gmail.com",
      "name": "pixelsandbytes"
    }
  ],
  "name": "hydrogen",
  "optionalDependencies": {},
  "readme": "# hydrogen\r\n\r\nA minimal library for object-oriented JavaScript development.\r\n\r\n[![Build Status](https://travis-ci.org/pixelsandbytes/hydrogen.png?branch=master)](https://travis-ci.org/pixelsandbytes/hydrogen)\r\n\r\n## How To Use\r\n\r\n### Node.js\r\n\r\nAdd `hydrogen` to your dependencies, then run:\r\n\r\n    npm install\r\n\r\nThen add:\r\n\r\n    var h = require('hydrogen');\r\n\r\n### Browser\r\n\r\n    <script type=\"text/javascript\" src=\"path/to/hydrogen.js\"></script>\r\n\r\n## Usage Examples\r\nSee [examples][examples-link] for the ones below plus more.\r\n\r\n### Inheritance\r\n`h.create()` can be used to create a prototypical object, or extend one prototypical object from another.\r\n\r\n    function Character(name, mediumName, otherName) {\r\n        this.name = name;\r\n        this.mediumName = mediumName;\r\n        this.otherName = otherName;\r\n    }\r\n    h.create(Character, {\r\n        getDescription: function() {\r\n            return this.getName() + ' is from \"' + this.mediumName + '\"';\r\n        },\r\n        getName: function() {\r\n            if (this.otherName) {\r\n                return this.name + ' (a.k.a. ' + this.otherName + ')';\r\n            } else {\r\n                return this.name;\r\n            }\r\n        }\r\n    });\r\n\r\n    function Villain(name, mediumName, otherName, wearsMask) {\r\n        this.super.constructor.call(this, name, mediumName, otherName);\r\n        this.wearsMask = wearsMask;\r\n    }\r\n    h.create(Villain, Character, {\r\n        getDescription: function() {\r\n            return this.getName() + ' is from \"' + this.mediumName + '\". Mwahahaha!';\r\n        }\r\n    });\r\n\r\n    var mcclane = Character.makeInst('John McClane', 'Die Hard');\r\n    mcclane.name; // John McClane\r\n    mcclane.getDescription(); // John McClane is from \"Die Hard\"\r\n    var vader = Villain.makeInst('Darth Vader', 'Star Wars', 'Anakin Skywalker', true);\r\n    vader.getDescription(); // Darth Vader (a.k.a. Anakin Skywalker) is from \"Star Wars\". Mwahahaha!\r\n\r\n### Private Variables\r\n`h.attach()` adds a closure to an object, which can be used to contain private variables and functions.\r\n\r\n    function Weapon(name) {\r\n        this.name = name;\r\n    }\r\n    h.attach(Weapon, function() {\r\n        var users = [];\r\n\r\n        return {\r\n            addUser: function(user) {\r\n                users.push(user);\r\n            },\r\n            getUsers: function() {\r\n                return users;\r\n            }\r\n        };\r\n    });\r\n\r\n    var bullwhip = Weapon.makeInst('Bullwhip');\r\n    bullwhip.users; // undefined\r\n    bullwhip.addUser('Indiana Jones');\r\n    bullwhip.addUser('Catwoman');\r\n    bullwhip.getUsers(); // Indiana Jones,Catwoman\r\n\r\nProperties returned by an attached closure can be overridden in a child object via either `h.create()` or `h.attach()`, see [examples][examples-link].\r\n\r\n### Checking Interfaces\r\n`h.checkImpl()` checks a value against an \"interface\" and determines if the value is a valid implementation of the interface.\r\n\r\n    var IMovie = {\r\n        type: 'object',\r\n        contents: {\r\n            title: {\r\n                type: 'string'\r\n            },\r\n            details: {\r\n                type: 'object',\r\n                contents: {\r\n                    summary: {type: 'string'},\r\n                    year: {type: 'number'}\r\n                }\r\n            },\r\n            play: {\r\n                type: 'function',\r\n                minArity: 2\r\n            }\r\n        }\r\n    };\r\n\r\n    var minorityReport = {\r\n        title: 'Minority Report',\r\n        details: {\r\n            summary: 'In a future where a special police unit is able to arrest murderers before ' +\r\n                'they commit their crimes, an officer from that unit is himself accused of a future murder.',\r\n            year: 2002,\r\n            cast: [\r\n                'Tom Cruise',\r\n                'Colin Farrell',\r\n                'Samantha Morton',\r\n                'Max von Sydow'\r\n            ]\r\n        },\r\n        play: function(startTime, fullScreen, showSubtitles) {}\r\n    };\r\n\r\n    var warOfTheWorlds = {\r\n        title: 'War of the Worlds',\r\n        details: {\r\n            summary: 'As Earth is invaded by alien tripod fighting machines, one family fights for survival.',\r\n            year: 2005\r\n        },\r\n        play: function(fullScreen) {}\r\n    };\r\n\r\n    h.checkImpl(minorityReport, IMovie); // true\r\n    h.checkImpl(warOfTheWorlds, IMovie); // At key [\"play\"]: Function does not accept at least 2 parameters\r\n\r\nSee [examples][examples-link] for more.\r\n\r\n[examples-link]: examples/index.html",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/pixelsandbytes/hydrogen.git"
  },
  "version": "0.2.0"
}
